<?php
use Drupal\Core\Form\FormStateInterface;

/**
 * @file
 * Contains fieldception.module.
 */

/**
 * Implements hook_theme().
 */
function fieldception_theme() {
  $themes['fieldception_subfield'] = [
    'variables' => [
      'definition' => NULL,
      'label' => NULL,
      'label_display' => 'above',
      'content' => NULL,
      'attributes' => NULL,
      'title_attributes' => NULL,
      'content_attributes' => NULL,
      'tag' => 'div',
    ],
    'file' => 'fieldception.theme.inc',
  ];
  return $themes;
}

/**
 * Implements theme_preprocess_field_multiple_value_form().
 */
function fieldception_preprocess_field_multiple_value_form(&$variables) {
  if (isset($variables['element']['#fieldception_drag']) && empty($variables['element']['#fieldception_drag'])) {
    // Remove tabledrag if field is not set to be draggable.
    unset($variables['table']['#tabledrag']);
    unset($variables['table']['#header'][1]);
  }
}

/**
 * Implements hook_validation_constraint_alter().
 */
function fieldception_validation_constraint_alter(array &$definitions) {
  // This constraint is required to test empty boolean values.
  $definitions['NotEqualTo']['class'] = '\Symfony\Component\Validator\Constraints\NotEqualTo';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function fieldception_form_field_config_edit_form_alter(&$form, FormStateInterface &$form_state) {
  /** @var \Drupal\field\Entity\FieldConfig $field */
  $field = $form_state->getFormObject()->getEntity();

  // Check field type and add config form but only if field type is telephone.
  if ($field->getType() == 'fieldception') {
    $form['#id'] = 'fieldception-wrapper';
    $form['#process'][] = ['\Drupal\fieldception\Plugin\Field\FieldType\FieldceptionItem', 'fieldFormAfterBuild'];
  }
}
